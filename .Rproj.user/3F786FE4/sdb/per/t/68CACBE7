{
    "contents" : "# CHURN ANALYSIS OF TELECOM DATA FROM http://www.wiley.com/legacy/compbooks/soukup/downloads.html\n\n#load library\nlibrary(Hmisc)\nlibrary(rpart)\nlibrary(party)\nlibrary(caret)\nlibrary(pROC)\nlibrary(ROCR)\nlibrary(randomForest)\nlibrary(FSelector)\nlibrary(corrgram)\n\n# data exploration\ntraindata=read.csv(file=\"traindata.csv\")\n# attach(traindata)\n\nsummary(traindata)\ndescribe(traindata)\n\ncorrgram(traindata, order=TRUE, lower.panel=panel.shade,\n         upper.panel=panel.pie, text.panel=panel.txt,\n         main=\"Churn Analysis\") \n\n# file splitting\ncrs = new.env()\n\ncrs$seed = 1234\ncrs$dataset = traindata\n\n# Build the training/validate/test datasets.\nset.seed(crs$seed) \ncrs$nobs = nrow(crs$dataset) \ncrs$sample = crs$train = sample(nrow(crs$dataset), .8*crs$nobs)\ncrs$validate = sample(setdiff(seq_len(nrow(crs$dataset)), crs$train), 0.2*crs$nobs) \n\ncrs$input = c(\"REGION\",\"CONTRACT_FEE\",\"AGE_RANGE\", \"CREDIT_APPROVAL\", \"CONTACT_METHOD\",\n               \"RATE_PLAN\",\"TOT_OPEN_AMT\",\"TOT_INVOICE_AMT\")\n\ncrs$target  = \"CHURN\"\n\n# train = traindata[train_ind, ]\n# test = traindata[-train_ind, ]\ntrain=crs$dataset[crs$train, c(crs$input, crs$target)]\ntest =crs$dataset[crs$validate, c(crs$input, crs$target)]\n\n# CART\n\n### REGRESSION\nfit<-rpart(CHURN~., data=train, method=\"anova\", \n           control=rpart.control(minsplit=50, cp=0.01))\n\n##display complexity parameter table\nprintcp(fit)\n\n###plot cross-validation results\nplotcp(fit)\n\n###detailed results including splits\nsummary(fit)\n\n# confusion matrix # accuracy: 76.93%\npred <- as.vector(ifelse(predict(fit, newdata=test) > 0.5, \"1\",\"0\"))\nconfusionMatrix(pred, test$CHURN)\n\n###Prune the tree to the desired size ..at min error cp\npfit<- prune(fit, cp= fit$cptable[which.min(fit$cptable[,\"xerror\"]),\"CP\"])\nsummary(pfit)\n\n# confusion matrix # accuracy: 76.93%\npred <- as.vector(ifelse(predict(pfit, newdata=test) > 0.5, \"1\",\"0\"))\nconfusionMatrix(pred, test$CHURN)\n\n# Random Forest\nfit <- randomForest(as.factor(CHURN)~., data=traindata, importance=TRUE, ntree=100,OOB=TRUE)\nfit$terms\n\nvarImpPlot(fit)\n\n# confusion matrix # accuracy: 80.64%\npred <- predict(fit, test)\nconfusionMatrix(pred, test$CHURN)\n\n# --------- code from rattle\n\nlibrary(rattle)\n\n# This log generally records the process of building a model. However, with very \n# little effort the log can be used to score a new dataset. The logical variable \n# 'building' is used to toggle between generating transformations, as when building \n# a model, and simply using the transformations, as when scoring a dataset.\n\nbuilding <- TRUE\nscoring  <- ! building\n\n# The colorspace package is used to generate the colours used in plots, if available.\n\nlibrary(colorspace)\n\n# A pre-defined value is used to reset the random seed so that results are repeatable.\n\ncrv$seed <- 42 \n\n#============================================================\n# Rattle timestamp: 2015-06-01 15:33:20 x86_64-w64-mingw32 \n\n# Load an R data frame.\n\ncrs$dataset <- traindata\n\n# Display a simple summary (structure) of the dataset.\n\nstr(crs$dataset)\n\n#============================================================\n# Rattle timestamp: 2015-06-01 15:33:28 x86_64-w64-mingw32 \n\n# Note the user selections. \n\n# Build the training/validate/test datasets.\n\nset.seed(0) \ncrs$nobs <- nrow(crs$dataset) # 371933 observations \ncrs$sample <- crs$train <- sample(nrow(crs$dataset), 0.7*crs$nobs) # 260353 observations\ncrs$validate <- sample(setdiff(seq_len(nrow(crs$dataset)), crs$train), 0.15*crs$nobs) # 55789 observations\ncrs$test <- setdiff(setdiff(seq_len(nrow(crs$dataset)), crs$train), crs$validate) # 55791 observations\n\n# The following variable selections have been noted.\n\ncrs$input <- c(\"CITY\", \"STATE\", \"ZIP\", \"REGION\",\n               \"CURRENTBALANCE\", \"CONTRACT_FEE\", \"TOT_OPEN_AMT\", \"TOT_INVOICE_AMT\",\n               \"TOT_PAID_AMT\", \"NUM_INVOICES\", \"ACTIVATED_YEAR\", \"ACTIVATED_MONTH\",\n               \"AGE_RANGE\", \"CREDIT_APPROVAL\", \"RENEWAL_YEAR\", \"RENEWAL_MONTH\",\n               \"CONTACT_METHOD\", \"RATE_PLAN\")\n\ncrs$numeric <- c(\"CURRENTBALANCE\", \"CONTRACT_FEE\", \"TOT_OPEN_AMT\", \"TOT_INVOICE_AMT\",\n                 \"TOT_PAID_AMT\", \"NUM_INVOICES\", \"ACTIVATED_YEAR\", \"RENEWAL_YEAR\")\n\ncrs$categoric <- c(\"CITY\", \"STATE\", \"ZIP\", \"REGION\",\n                   \"ACTIVATED_MONTH\", \"AGE_RANGE\", \"CREDIT_APPROVAL\", \"RENEWAL_MONTH\",\n                   \"CONTACT_METHOD\", \"RATE_PLAN\")\n\ncrs$target  <- \"CHURN\"\ncrs$risk    <- NULL\ncrs$ident   <- c(\"X\", \"CUSTOMERID\")\ncrs$ignore  <- NULL\ncrs$weights <- NULL\n\n#============================================================\n# Rattle timestamp: 2015-06-01 15:34:56 x86_64-w64-mingw32 \n\n# Note the user selections. \n\n# Build the training/validate/test datasets.\n\nset.seed(0) \ncrs$nobs <- nrow(crs$dataset) # 371933 observations \ncrs$sample <- crs$train <- sample(nrow(crs$dataset), 0.7*crs$nobs) # 260353 observations\ncrs$validate <- sample(setdiff(seq_len(nrow(crs$dataset)), crs$train), 0.15*crs$nobs) # 55789 observations\ncrs$test <- setdiff(setdiff(seq_len(nrow(crs$dataset)), crs$train), crs$validate) # 55791 observations\n\n# The following variable selections have been noted.\n\ncrs$input <- c(\"REGION\", \"CURRENTBALANCE\", \"CONTRACT_FEE\", \"TOT_OPEN_AMT\",\n               \"TOT_INVOICE_AMT\", \"TOT_PAID_AMT\", \"NUM_INVOICES\", \"ACTIVATED_YEAR\",\n               \"ACTIVATED_MONTH\", \"AGE_RANGE\", \"CREDIT_APPROVAL\", \"RENEWAL_YEAR\",\n               \"RENEWAL_MONTH\", \"CONTACT_METHOD\", \"RATE_PLAN\")\n\ncrs$numeric <- c(\"CURRENTBALANCE\", \"CONTRACT_FEE\", \"TOT_OPEN_AMT\", \"TOT_INVOICE_AMT\",\n                 \"TOT_PAID_AMT\", \"NUM_INVOICES\", \"ACTIVATED_YEAR\", \"RENEWAL_YEAR\")\n\ncrs$categoric <- c(\"REGION\", \"ACTIVATED_MONTH\", \"AGE_RANGE\", \"CREDIT_APPROVAL\",\n                   \"RENEWAL_MONTH\", \"CONTACT_METHOD\", \"RATE_PLAN\")\n\ncrs$target  <- \"CHURN\"\ncrs$risk    <- NULL\ncrs$ident   <- \"X\"\ncrs$ignore  <- c(\"CUSTOMERID\", \"CITY\", \"STATE\", \"ZIP\")\ncrs$weights <- NULL\n\n#============================================================\n# Rattle timestamp: 2015-06-01 15:35:34 x86_64-w64-mingw32 \n\n# Random Forest \n\n# The 'randomForest' package provides the 'randomForest' function.\n\nrequire(randomForest, quietly=TRUE)\n\n# Build the Random Forest model.\n\nset.seed(crv$seed)\ncrs$rf <- randomForest(as.factor(CHURN) ~ .,\n                       data=crs$dataset[crs$sample,c(crs$input, crs$target)], \n                       ntree=100,\n                       mtry=15,\n                       importance=TRUE,\n                       na.action=na.roughfix,\n                       replace=FALSE)\n\n# Generate textual output of 'Random Forest' model.\n\ncrs$rf\n\n# The `pROC' package implements various AUC functions.\n\nrequire(pROC, quietly=TRUE)\n\n# Calculate the Area Under the Curve (AUC).\n\nroc(crs$rf$y, as.numeric(crs$rf$predicted))\n\n# Calculate the AUC Confidence Interval.\n\nci.auc(crs$rf$y, as.numeric(crs$rf$predicted))\n\n# List the importance of the variables.\n\nrn <- round(importance(crs$rf), 2)\nrn[order(rn[,3], decreasing=TRUE),]\n\n# Time taken: 10.76 mins",
    "created" : 1433134860439.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3568775839",
    "id" : "68CACBE7",
    "lastKnownWriteTime" : 1433189544,
    "path" : "C:/Stuff/Downloads/MS BSAN/Quarter 3/DataRobot Interview/churn analysis - vdm data.R",
    "project_path" : "churn analysis - vdm data.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}